module check/Buffers-chk

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  signatures/Buffers-sig


imports
  signatures/Types-sig


imports
  signatures/Identifiers-sig


imports
  signatures/Keywords-sig


imports
  check/Types-chk


imports
  check/Identifiers-chk


imports
  check/Keywords-chk


strategies
  check-example =
    check-Type

  check-example =
    check-Identifier

  check-Type :
    Int() -> <id>

  is-Type-with-constructor =
    ?Int()

  check-Type :
    Buffer() -> <id>

  is-Type-with-constructor =
    ?Buffer()

  check-Type :
    FILE() -> <id>

  is-Type-with-constructor =
    ?FILE()

  check-Identifier :
    Length() -> <id>

  is-Identifier-with-constructor =
    ?Length()

  check-Identifier :
    Create() -> <id>

  is-Identifier-with-constructor =
    ?Create()

  check-Identifier :
    Print() -> <id>

  is-Identifier-with-constructor =
    ?Print()

  check-Identifier :
    PrintF() -> <id>

  is-Identifier-with-constructor =
    ?PrintF()

  check-Identifier :
    Fopen() -> <id>

  is-Identifier-with-constructor =
    ?Fopen()

  check-Identifier :
    Fread() -> <id>

  is-Identifier-with-constructor =
    ?Fread()

  is-Type-with-constructor =
    fail

  is-Identifier-with-constructor =
    fail

  check-Type :
    amb([h|hs]) -> <check-Type> h

  check-Identifier :
    amb([h|hs]) -> <check-Identifier> h

  error-Type =
    debug(!"Unexpected constructor. Expected constructor from sort Type instead. ")

  error-Identifier =
    debug(!"Unexpected constructor. Expected constructor from sort Identifier instead. ")


strategies
  check-Keyword =
    is-string

  check-example =
    check-Keyword

  check-Keyword :
    amb([h|hs]) -> <check-Keyword> h

  error-Keyword =
    debug(!"Unexpected constructor. Expected string from sort Keyword instead. ")