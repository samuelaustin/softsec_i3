module pp/Constants-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  signatures/Constants-sig


strategies
  prettyprint-CONS =
    ![S(<is-string>)]

  prettyprint-FLAGINT =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-CONS

  prettyprint-example =
    prettyprint-FLAGINT

  prettyprint-CONS :
    amb([h|hs]) -> <prettyprint-CONS> h

  prettyprint-FLAGINT :
    amb([h|hs]) -> <prettyprint-FLAGINT> h


strategies
  prettyprint-example =
    prettyprint-Constant

  prettyprint-Constant :
    Decimal(t1__) -> [ H(
                         [SOpt(HS(), "0")]
                       , [t1__']
                       )
                     ]
    with t1__' := <pp-one-Z(prettyprint-CONS)> t1__

  is-Constant =
    ?Decimal(_)

  prettyprint-Constant :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  is-Constant =
    ?True()

  prettyprint-Constant :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  is-Constant =
    ?False()

  prettyprint-Constant :
    Null() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("null")]
                )
              ]

  is-Constant =
    ?Null()

  is-Constant =
    fail

  prettyprint-Constant :
    amb([h|hs]) -> <prettyprint-Constant> h


strategies
  prettyprint-CHAR =
    ![S(<is-string>)]

  prettyprint-CONSCHAR =
    ![S(<is-string>)]

  prettyprint-CONSSTRING =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-CHAR

  prettyprint-example =
    prettyprint-CONSCHAR

  prettyprint-example =
    prettyprint-CONSSTRING

  prettyprint-CHAR :
    amb([h|hs]) -> <prettyprint-CHAR> h

  prettyprint-CONSCHAR :
    amb([h|hs]) -> <prettyprint-CONSCHAR> h

  prettyprint-CONSSTRING :
    amb([h|hs]) -> <prettyprint-CONSSTRING> h


strategies
  prettyprint-example =
    prettyprint-Constant

  prettyprint-Constant :
    Char(t1__) -> [ H(
                      [SOpt(HS(), "0")]
                    , [t1__']
                    )
                  ]
    with t1__' := <pp-one-Z(prettyprint-CONSCHAR)> t1__

  is-Constant =
    ?Char(_)

  prettyprint-Constant :
    String(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , [t1__']
                      )
                    ]
    with t1__' := <pp-one-Z(prettyprint-CONSSTRING)> t1__

  is-Constant =
    ?String(_)

  is-Constant =
    fail

  prettyprint-Constant :
    amb([h|hs]) -> <prettyprint-Constant> h