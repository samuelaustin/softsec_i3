[
   Int                          -- KW["int"],
   Buffer                       -- KW["buffer"],
   FILE                         -- KW["FILE"],
   Length                       -- KW["length"],
   Create                       -- KW["create"],
   Print                        -- KW["print"],
   PrintF                       -- KW["printf"],
   Fopen                        -- KW["fopen"],
   Fread                        -- KW["fread"],
   COMPLETION-Type              -- _1,
   COMPLETION-Identifier        -- _1,
   Void                         -- KW["void"],
   Bool                         -- KW["boolean"],
   Char                         -- KW["char"],
   COMPLETION-Type              -- _1,
   Decl                         -- _1,
   Decl                         -- _1 _2,
   DeclInit                     -- _1 _2 KW["="] _3,
   COMPLETION-Decl              -- _1,
   COMPLETION-Declaration       -- _1,
   Block                        -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   Block.1:iter-star            -- _1,
   DeclStm                      -- _1 KW[";"],
   Exp                          -- _1 KW[";"],
   If                           -- KW["if"] KW["("] _1 KW[")"] _2,
   IfElse                       -- KW["if"] KW["("] _1 KW[")"] _2 KW["else"] _3,
   While                        -- KW["while"] KW["("] _1 KW[")"] _2,
   DoWhile                      -- KW["do"] _1 KW["while"] KW["("] _2 KW[")"],
   For                          -- KW["for"] KW["("] _1 KW[";"] _2 KW[";"] _3 KW[")"] _4,
   For.1:opt                    -- _1,
   For.2:opt                    -- _1,
   For.3:opt                    -- _1,
   ForDec                       -- KW["for"] KW["("] _1 KW[";"] _2 KW[";"] _3 KW[")"] _4,
   ForDec.2:opt                 -- _1,
   ForDec.3:opt                 -- _1,
   Return                       -- KW["return"] _1 KW[";"],
   Return.1:opt                 -- _1,
   Exit                         -- KW["exit"] _1 KW[";"],
   Exit.1:opt                   -- _1,
   COMPLETION-Block             -- _1,
   COMPLETION-Stm               -- _1,
   Module                       -- KW["module"] _1 _2 KW["{"] _3 KW["}"],
   Module.2:opt                 -- _1,
   Module.3:iter-star           -- _1,
   Imports                      -- V  [H  [KW["imports"]] _1],
   Imports.1:iter-star-sep      -- _1 KW[","],
   Import                       -- _1,
   COMPLETION-Module            -- _1,
   COMPLETION-ModuleContent     -- _1,
   COMPLETION-ModuleImports     -- _1,
   COMPLETION-Import            -- _1,
   Param                        -- _1 _2,
   FunDef                       -- _1 _2 KW["("] _3 KW[")"] KW["{"] _4 KW["}"],
   FunDef.3:iter-star-sep       -- _1 KW[","],
   FunDef.4:iter-star           -- _1,
   FunProto                     -- _1 _2 KW["("] _3 KW[")"] KW[";"],
   FunProto.3:iter-star-sep     -- _1 KW[","],
   COMPLETION-FunctionParameter -- _1,
   COMPLETION-FunDef            -- _1,
   COMPLETION-FunProto          -- _1,
   Identifier                   -- _1,
   COMPLETION-Identifier        -- _1,
   Var                          -- _1,
   CommaExp                     -- KW["("] _1 KW[")"],
   FunctionCall                 -- _1 KW["("] _2 KW[")"],
   FunctionCall.2:iter-star-sep -- _1 KW[","],
   ArrayField                   -- _1 KW["["] _2 KW["]"],
   Field                        -- _1 KW["."] _2,
   IncrementPostfix             -- _1 KW["++"],
   DecrementPostfix             -- _1 KW["--"],
   Not                          -- KW["!"] _1,
   COMPLETION-Exp               -- _1,
   Multiplication               -- _1 KW["*"] _2,
   Division                     -- _1 KW["/"] _2,
   Modulo                       -- _1 KW["%"] _2,
   Addition                     -- _1 KW["+"] _2,
   Subtraction                  -- _1 KW["-"] _2,
   LessThan                     -- _1 KW["<"] _2,
   LessThanEqual                -- _1 KW["<="] _2,
   GreaterThan                  -- _1 KW[">"] _2,
   GreaterThanEqual             -- _1 KW[">="] _2,
   Equal                        -- _1 KW["=="] _2,
   Inequal                      -- _1 KW["!="] _2,
   And                          -- _1 KW["&&"] _2,
   Or                           -- _1 KW["||"] _2,
   Assign                       -- _1 _2 _3,
   Assign                       -- KW["="],
   COMPLETION-Exp               -- _1,
   COMPLETION-AssignExp         -- _1,
   COMPLETION-AssignOp          -- _1,
   COMPLETION-CommaExp          -- _1,
   Decimal                      -- _1,
   True                         -- KW["true"],
   False                        -- KW["false"],
   Null                         -- KW["null"],
   Char                         -- _1,
   String                       -- _1,
   COMPLETION-Constant          -- _1
]